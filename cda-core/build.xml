<!--===========================================================================
  This is the build file for the Community Dashboard Framework Plugin project.

  This build file will use the common_build.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.

  See common_build.xml for more details
============================================================================-->
<project name="Community Data Access" basedir="." default="jar"
         xmlns:ivy="antlib:org.apache.ivy.ant">

  <description>
    This build file is used to create the CDA project
    and works with the common_build.xml file.
  </description>

  <!-- Import the common_build.xml file which contains all the default tasks -->
  <import file="common_build.xml"/>

  <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN common_build.xml.
    -->

<!--
  <target name='dist-solution'>
    <copy todir="${solution.stage.dir}" overwrite='true'>
      <fileset dir='solution'>
      <include name=''>
    </copy>
  </target>
-->


  <target name="compile.compile" depends="init" description="Performs the actual javac compile">
    <javac destdir="${classes.dir}"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           fork="true"
           source="${javac.source}"
           target="${javac.target}">
      <classpath>
        <path refid="classpath"/>
        <fileset dir="runtime-lib">
          <include name="**/*.jar" />
        </fileset>
        
      </classpath>
      <src path="${src.dir}"/>
    </javac>
  </target>
	
	<target name="init-tests" depends="clean-tests">
	    <mkdir dir="${testclasses.dir}" />
	    <mkdir dir="${testsrc.dir}" />
		
	    <copy todir="${testclasses.dir}" overwrite='true'>
	      <fileset dir='${testresources.dir}' />
	    </copy>
		<unzip src="${testclasses.dir}/sampledata.zip" dest="${testclasses.dir}/sampledata" />
	 </target>

  <property name="plugin.name"
            value="cda"
            description="Name of the plugin"/>

  <property name="resource.dir"
            value="resources"
            description="Name of the resource directory"/>

  <property name="stage.dir"
            value="${bin.dir}/stage"
            description="Name of the resource directory"/>

  <property name="samples.stage.dir"
            value="${bin.dir}/stage-samples"
            description="Name of the resource directory" />
  <property name="runtimelib.dir"
            value="${basedir}/runtime-lib"
            description="Directory that hosts Jar files required to run project source.  (IVY will populate this directory with required jars)" />
	
  <property name="testresources.dir" value="${basedir}/test-resources" description="Directory that hosts the test resources files" />

  <tstamp/>

  <!-- Build the project.revision property -->
  <property name="distribution.version" value="${project.stage}-${project.version}"/>


  <echo>distribution.version = ${distribution.version}</echo>


 <!-- Overriding resolve target so we can add resolve-dev -->
  <target name="resolve"
          depends="resolve-default, resolve-test, resolve-runtime, ivy.check-releasable"
          description="Retrieves all the dependent libraries" />


  <target name="resolve-runtime" depends="resolve-init">
    <ivy:resolve file="ivy.xml" conf="runtime" />
    <ivy:retrieve conf="runtime" pattern="${runtimelib.dir}/[module]-[revision](-[classifier]).[ext]" />
  </target>  

</project>
